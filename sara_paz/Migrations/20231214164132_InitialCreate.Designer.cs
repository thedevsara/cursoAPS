// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sara_paz.Models;

#nullable disable

namespace sarapaz.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231214164132_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("sara_paz.Models.Cliente", b =>
                {
                    b.Property<int>("idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Notavendacod")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("idcliente");

                    b.HasIndex("Notavendacod");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("sara_paz.Models.Item", b =>
                {
                    b.Property<int>("iditem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("percentual")
                        .HasColumnType("int");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<string>("quantidade")
                        .HasColumnType("longtext");

                    b.HasKey("iditem");

                    b.ToTable("items");
                });

            modelBuilder.Entity("sara_paz.Models.Marca", b =>
                {
                    b.Property<int>("idmar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Produtoid")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("none")
                        .HasColumnType("longtext");

                    b.HasKey("idmar");

                    b.HasIndex("Produtoid");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("sara_paz.Models.Notavenda", b =>
                {
                    b.Property<int>("cod_nota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Itemid")
                        .HasColumnType("int");

                    b.Property<int>("Pagamentoid")
                        .HasColumnType("int");

                    b.Property<string>("data")
                        .HasColumnType("longtext");

                    b.Property<bool>("tipo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("cod_nota");

                    b.HasIndex("Itemid");

                    b.HasIndex("Pagamentoid");

                    b.ToTable("Notavenda");
                });

            modelBuilder.Entity("sara_paz.Models.Pagamento", b =>
                {
                    b.Property<int>("idpag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("datalimite")
                        .HasColumnType("date");

                    b.Property<bool>("pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("idpag");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("sara_paz.Models.Produto", b =>
                {
                    b.Property<int>("idprod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Itemid")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("idprod");

                    b.HasIndex("Itemid");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("sara_paz.Models.TipoPagamento", b =>
                {
                    b.Property<int>("idtipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Notavendacod")
                        .HasColumnType("int");

                    b.Property<string>("informacaoadicionais")
                        .HasColumnType("longtext");

                    b.Property<string>("nomecobrado")
                        .HasColumnType("longtext");

                    b.HasKey("idtipo");

                    b.HasIndex("Notavendacod");

                    b.ToTable("Tipopagamento");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TipoPagamento");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("sara_paz.Models.Transportadora", b =>
                {
                    b.Property<int>("idtrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Notavendacod")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("idtrans");

                    b.HasIndex("Notavendacod");

                    b.ToTable("transportadoras");
                });

            modelBuilder.Entity("sara_paz.Models.Vendedor", b =>
                {
                    b.Property<int>("idvende")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Notavendacod")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("idvende");

                    b.HasIndex("Notavendacod");

                    b.ToTable("Vendedors");
                });

            modelBuilder.Entity("sara_paz.Models.PagamentoCartao", b =>
                {
                    b.HasBaseType("sara_paz.Models.TipoPagamento");

                    b.Property<string>("bandeira")
                        .HasColumnType("longtext");

                    b.Property<string>("numerocart")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("PagamentoCartao");
                });

            modelBuilder.Entity("sara_paz.Models.PagamentoCheque", b =>
                {
                    b.HasBaseType("sara_paz.Models.TipoPagamento");

                    b.Property<int>("banco")
                        .HasColumnType("int");

                    b.Property<string>("nomebanco")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("PagamentoCheque");
                });

            modelBuilder.Entity("sara_paz.Models.Cliente", b =>
                {
                    b.HasOne("sara_paz.Models.Notavenda", "Notavenda")
                        .WithMany("Clientes")
                        .HasForeignKey("Notavendacod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notavenda");
                });

            modelBuilder.Entity("sara_paz.Models.Marca", b =>
                {
                    b.HasOne("sara_paz.Models.Produto", "Produto")
                        .WithMany("Marcas")
                        .HasForeignKey("Produtoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("sara_paz.Models.Notavenda", b =>
                {
                    b.HasOne("sara_paz.Models.Item", "Item")
                        .WithMany("Notavendas")
                        .HasForeignKey("Itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sara_paz.Models.Pagamento", "Pagamento")
                        .WithMany("Notavendas")
                        .HasForeignKey("Pagamentoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("sara_paz.Models.Produto", b =>
                {
                    b.HasOne("sara_paz.Models.Item", "Item")
                        .WithMany("Produto")
                        .HasForeignKey("Itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("sara_paz.Models.TipoPagamento", b =>
                {
                    b.HasOne("sara_paz.Models.Notavenda", "Notavenda")
                        .WithMany("tipopagamentos")
                        .HasForeignKey("Notavendacod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notavenda");
                });

            modelBuilder.Entity("sara_paz.Models.Transportadora", b =>
                {
                    b.HasOne("sara_paz.Models.Notavenda", "notavenda")
                        .WithMany("transportadoras")
                        .HasForeignKey("Notavendacod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("notavenda");
                });

            modelBuilder.Entity("sara_paz.Models.Vendedor", b =>
                {
                    b.HasOne("sara_paz.Models.Notavenda", "NotaVenda")
                        .WithMany("Vendedors")
                        .HasForeignKey("Notavendacod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaVenda");
                });

            modelBuilder.Entity("sara_paz.Models.Item", b =>
                {
                    b.Navigation("Notavendas");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("sara_paz.Models.Notavenda", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Vendedors");

                    b.Navigation("tipopagamentos");

                    b.Navigation("transportadoras");
                });

            modelBuilder.Entity("sara_paz.Models.Pagamento", b =>
                {
                    b.Navigation("Notavendas");
                });

            modelBuilder.Entity("sara_paz.Models.Produto", b =>
                {
                    b.Navigation("Marcas");
                });
#pragma warning restore 612, 618
        }
    }
}
